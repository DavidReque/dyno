"use strict";(self.webpackChunkdyno=self.webpackChunkdyno||[]).push([[727],{"./src/stories/Switch.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Switch_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@15.1.4_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@15.1.4_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js"),utils=__webpack_require__("./src/lib/utils.ts");const Switch=({checked,onChange,className,...props})=>{const[internalChecked,setInternalChecked]=(0,react.useState)(!1),isChecked="boolean"==typeof checked?checked:internalChecked;return(0,jsx_runtime.jsx)("button",{type:"button",role:"switch","aria-checked":isChecked,onClick:()=>{const newVal=!isChecked;onChange&&onChange(newVal),"boolean"!=typeof checked&&setInternalChecked(newVal)},className:(0,utils.cn)("relative inline-flex h-6 w-11 items-center cursor-pointer rounded-full transition-colors",isChecked?"bg-green-500":"bg-gray-200",className),...props,children:(0,jsx_runtime.jsx)("span",{className:(0,utils.cn)("absolute h-4 w-4 transform rounded-full bg-white transition-transform shadow-sm",isChecked?"translate-x-6":"translate-x-1")})})};Switch.__docgenInfo={description:"",methods:[],displayName:"Switch",props:{checked:{required:!1,tsType:{name:"boolean"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(checked: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"checked"}],return:{name:"void"}}},description:""},className:{required:!1,tsType:{name:"string"},description:""}},composes:["Omit"]};const Switch_stories={title:"General/Switch",component:Switch,parameters:{layout:"centered"},tags:["autodocs"]},Default=(args=>{const[value,setValue]=(0,react.useState)(!1);return(0,jsx_runtime.jsx)(Switch,{...args,checked:value,onChange:setValue})}).bind({});Default.args={};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(false);\n  return <Switch {...args} checked={value} onChange={setValue} />;\n}",...Default.parameters?.docs?.source}}}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function cn(...classes){return classes.filter(Boolean).join(" ")}__webpack_require__.d(__webpack_exports__,{cn:()=>cn})}}]);